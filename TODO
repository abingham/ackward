-*- rst -*-

General
=======

* Consider adding "isNone" or some other way of checking Object
  subclasses for None...or if this is even a reasonable idea. Using
  shared_ptr is also a good option.
* create (or find) "type()" method for python objects
* Check for proper type on C++ object construction, e.g. TimeDelta
  should check the obj parameter, at least in debug mode

Logging
=======

* rename to ackward::logging
* Quash console output in tests
* LoggerAdapter
* Various handler subclasses
* StreamHandler: construct from things like cout, cerr...any ostream?

Datetime
========

* Do this!
* Rich comparison for TimeDelta

Next Version
============

* Subclassing C++ interfaces
  For example::
  
  class MyFormatter : public Formatter
  {
  private:
     // Reimplements standard format() method
     std::wstring format_impl(const LogRecord&) const;
  };

