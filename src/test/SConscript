import os

Import('env')

local_env = env.Clone()

for libname in ['core', 
                'datetime', 
                'logging']:
    toks = os.path.split(str(local_env['products']['ackward_%s' % libname][0]))
    libpath, lib = os.path.join(toks[:-1]), toks[-1]
    local_env.AppendUnique(LIBS=[lib])
    local_env.AppendUnique(LIBPATH=libpath)
    local_env.AppendUnique(RPATH=libpath)

local_env.AppendUnique(CPPDEFINES=['BOOST_TEST_DYN_LINK'])
local_env.AppendUnique(LIBS=['boost_unit_test_framework'])

sources = [
    'filter_test.cpp',
    'formatter_test.cpp',
    'handler_test.cpp',
    'LoggerFixture.cpp',
    'logger_adapter_test.cpp',
    'logger_test.cpp',
    'log_record_test.cpp',
    'module_test.cpp',
    'timedelta_test.cpp',
    'types_test.cpp',
    'test.cpp',
    'util.cpp'
    ]

env.Alias('all', local_env.Program('ackward_test', sources))
env.Alias('all', local_env.Program('sample', ['sample.cpp']))
