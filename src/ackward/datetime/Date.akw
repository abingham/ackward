# -*- python -*-

import akw

def classDef():
    c = akw.Class(name='Date',
                  wrapped_class='datetime.date')

    akw.Constructor(
        cls=c,
        signature=[('unsigned int', 'year'),
                   ('unsigned int', 'month'),
                   ('unsigned int', 'day')])

    akw.ClassMethod(
        cls=c,
        name='today',
        return_type='Date',
        signature=[])

    akw.ClassMethod(
        cls=c,
        name='fromtimestamp',
        return_type='Date',
        signature=[('double', 'timestamp')])
    
    akw.ClassMethod(
        cls=c,
        name='fromordinal',
        return_type='Date',
        signature=[('unsigned int', 'ordinal')])

    akw.ClassProperty(
        cls=c,
        name='min',
        type='Date',
        read_only=True)

    akw.ClassProperty(
        cls=c,
        name='max',
        type='Date',
        read_only=True)
    
    akw.ClassProperty(
        cls=c,
        name='resolution',
        type='TimeDelta',
        read_only=True)

    akw.Property(
        cls=c,
        name='year',
        type='unsigned int',
        read_only=True)

    akw.Property(
        cls=c,
        name='month',
        type='unsigned int',
        read_only=True)

    akw.Property(
        cls=c,
        name='day',
        type='unsigned int',
        read_only=True)

    akw.Method(
        cls=c,
        name='_replace',
        python_name='replace',
        return_type='Date',
        signature=[('unsigned int', 'year'),
                   ('unsigned int', 'month'),
                   ('unsigned int', 'day')],
        const=True)

    akw.Method(
        cls=c,
        name='timetuple',
        return_type='tm',
        const=True)

    akw.Method(
        cls=c,
        name='toordinal',
        return_type='unsigned int',
        const=True)
    
    akw.Method(
        cls=c,
        name='weekday',
        return_type='int',
        const=True)

    akw.Method(
        cls=c,
        name='isoweekday',
        return_type='int',
        const=True)

    akw.Method(
        cls=c,
        name='_isocalendar',
        return_type='boost::python::tuple',
        const=True,
        python_name='isocalendar')

    akw.Method(
        cls=c,
        name='isoformat',
        return_type='std::string',
        const=True)

    akw.Method(
        cls=c,
        name='ctime',
        return_type='std::string',
        const=True)


    akw.Method(
        cls=c,
        name='strftime',
        return_type='std::wstring',
        signature=[('std::wstring', 'fmt')],
        const=True)

    return c
